{"version":3,"file":"component---src-elegantstack-gatsby-blog-pages-pages-authors-jsx-a6cb3727fa56216a0e67.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-medical/../packages/blog/gatsby-blog-helpers/node_modules/dedupe/dist/index.esm.js","webpack://@elegantstack/gatsby-starter-flexiblog-medical/../packages/blog/gatsby-blog-helpers/src/useBlogCategories.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-medical/../packages/blog/gatsby-blog-helpers/src/useBlogAuthors.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-medical/../packages/blog/gatsby-blog-helpers/src/useBlogTags.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-medical/../packages/flow-ui/flow-ui-components/src/MemphisPattern/MemphisPattern.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-medical/./src/@elegantstack/flow-ui-components/PageTitle/PageTitle.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-medical/../packages/flow-ui/flow-ui-components/src/Avatar/Avatar.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-medical/./src/@elegantstack/flow-ui-widgets/AuthorExpanded/AuthorExpanded.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-medical/./src/@elegantstack/gatsby-blog-pages/pages/authors.jsx"],"sourcesContent":["function r(r,t){void 0===t&&(t=JSON.stringify);for(var n=[],a={},e=0;e<r.length;e++){var f=r[e],i=t(f);a[i]||(n.push(f),a[i]=!0)}return n}export{r as default};\n","import { useStaticQuery, graphql } from 'gatsby'\r\nimport dedupe from 'dedupe'\r\n\r\nexport const useBlogCategories = () => {\r\n  const { allArticleCategory } = useStaticQuery(categoriesQuery)\r\n  return allArticleCategory.nodes\r\n    ? dedupe(allArticleCategory.nodes, node => node.slug)\r\n    : null\r\n}\r\n\r\nconst categoriesQuery = graphql`\r\n  query allArticleCategoryQuery {\r\n    allArticleCategory(sort: {name: DESC})  {\r\n      nodes {\r\n        ...ArticleCategory\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\nimport dedupe from 'dedupe'\r\n\r\nexport const useBlogAuthors = () => {\r\n  const { allArticleAuthor } = useStaticQuery(authorsQuery)\r\n  return allArticleAuthor.nodes\r\n    ? dedupe(allArticleAuthor.nodes, node => node.slug)\r\n    : null\r\n}\r\n\r\nconst authorsQuery = graphql`\r\n  query allArticleAuthorQuery {\r\n    allArticleAuthor {\r\n      nodes {\r\n        ...ArticleAuthor\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\n\r\nexport const useBlogTags = () => {\r\n  const { allArticleTag } = useStaticQuery(tagsQuery)\r\n  return allArticleTag.nodes || []\r\n}\r\n\r\nconst tagsQuery = graphql`\r\n  query allArticleTagQuery {\r\n    allArticleTag {\r\n      nodes {\r\n        ...ArticleTag\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport memphis from '../../assets/memphis.png'\r\n\r\nconst styles = {\r\n  pattern: {\r\n    size: `full`,\r\n    backgroundImage: `url(${memphis})`,\r\n    backgroundSize: `11rem`,\r\n    position: `absolute`,\r\n    opacity: 0.05,\r\n    top: 0,\r\n    left: 0\r\n  }\r\n}\r\n\r\nconst MemphisPattern = ({ sx = {}, ...props }) => (\r\n  <Box sx={{ ...styles.pattern, ...sx }} {...props}></Box>\r\n)\r\n\r\nexport default MemphisPattern\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Heading, Text, Badge } from 'theme-ui'\r\n\r\nconst styles = {\r\n  count: {\r\n    fontSize: 4\r\n  },\r\n  subheader: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`\r\n  },\r\n  runninghead: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`,\r\n    mb: 0\r\n  }\r\n}\r\n\r\nconst PageTitle = ({ header, subheader, running, totalCount }) => {\r\n  return (\r\n    <div>\r\n      <Heading variant='h1' as='h1'>\r\n        {header}{' '}\r\n        {totalCount && (\r\n          <Badge variant='tag-white' sx={styles.count}>\r\n            {' '}\r\n            {totalCount}\r\n          </Badge>\r\n        )}\r\n      </Heading>\r\n      {subheader && (\r\n        <Text variant='h3' sx={styles.subheader}>\r\n          {subheader}\r\n        </Text>\r\n      )}\r\n      {running && (\r\n        <Text variant='h4' sx={styles.runninghead}>\r\n          {running}\r\n        </Text>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  subheader: PropTypes.string,\r\n  running: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  totalCount: PropTypes.number\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\r\nimport { Box, css } from 'theme-ui'\r\nimport MemphisPattern from '@components/MemphisPattern'\r\nimport getImageVariant from '@components/utils/getImageVariant'\r\n\r\n//Base size to keep all layers aligned easier\r\nconst bs = x => `${x * 0.35}rem`\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    position: `relative`,\r\n    zIndex: 2,\r\n    textAlign: `center`,\r\n    mb: bs(3)\r\n  },\r\n  pattern: {\r\n    backgroundSize: `8rem`,\r\n    opacity: 0.15\r\n  },\r\n  circle: ({ width }) => ({\r\n    width: [bs(30), `full`],\r\n    height: `full`,\r\n    maxWidth: width,\r\n    borderRadius: `full`,\r\n    position: `absolute`,\r\n    transform: `translate(-50%)  scale(0.98)`,\r\n    left: `50%`,\r\n    top: bs(3),\r\n    bg: `alpha`\r\n  }),\r\n  arc: ({ width }) => ({\r\n    width: [bs(30), `full`],\r\n    height: `full`,\r\n    maxWidth: width,\r\n    borderRadius: `full`,\r\n    position: `absolute`,\r\n    zIndex: 2,\r\n    left: `50%`,\r\n    transform: `translate(-50%)`,\r\n    mt: bs(-1),\r\n    ml: bs(-2),\r\n    boxShadow: t => `\r\n\t\t\t${bs(2)}\r\n\t\t\t${bs(4)}\r\n\t\t\t${t.colors.omegaLight}\r\n\t\t`\r\n  }),\r\n  imageWrapper: {\r\n    mx: `auto`,\r\n    img: {\r\n      borderRadius: `0 0 9999px 9999px`\r\n    }\r\n  }\r\n}\r\n\r\nconst Avatar = ({\r\n  avatar,\r\n  withPattern,\r\n  patternStyles = {},\r\n  size,\r\n  width,\r\n  loading,\r\n  alt\r\n}) => {\r\n  const image = avatar && getImageVariant(avatar, size)\r\n\r\n  if (!image) return null\r\n\r\n  width = width || image.width\r\n\r\n  return (\r\n    <Box sx={styles.wrapper}>\r\n      <Box>\r\n        {withPattern && (\r\n          <MemphisPattern sx={{ ...styles.pattern, ...patternStyles }} />\r\n        )}\r\n        <Box sx={styles.circle({ width })}></Box>\r\n        <Box sx={styles.arc({ width })}></Box>\r\n        <Img\r\n          image={image}\r\n          alt={alt}\r\n          loading={loading}\r\n          css={css(styles.imageWrapper)}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Avatar\r\n\r\nAvatar.defaultProps = {\r\n  size: 'regular',\r\n  withPattern: false\r\n}\r\n\r\nAvatar.propTypes = {\r\n  size: PropTypes.oneOf([false, 'small', 'regular']),\r\n  width: PropTypes.number,\r\n  withPattern: PropTypes.bool,\r\n  patternStyles: PropTypes.object,\r\n  loading: PropTypes.string,\r\n  alt: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Flex, Box, Text, Heading, Card, Badge, Link } from 'theme-ui'\r\nimport MemphisPattern from '@components/MemphisPattern'\r\nimport Avatar from '@components/Avatar'\r\nimport Navigation from '@components/Navigation'\r\nimport attachSocialIcons from '@helpers/attachSocialIcons'\r\n\r\nconst styles = {\r\n  card: {\r\n    position: `relative`\r\n  },\r\n  wrapper: {\r\n    flexDirection: [`column`, `row`],\r\n    position: `relative`,\r\n    zIndex: 3\r\n  },\r\n  avatarColumn: {\r\n    flexBasis: `1/3`\r\n  },\r\n  infoColumn: {\r\n    flexBasis: `2/3`\r\n  },\r\n  innerBox: {\r\n    flexBasis: `1/2`,\r\n    flexGrow: 1,\r\n    px: [0, 3],\r\n    mt: [3, 0]\r\n  },\r\n  subheader: {\r\n    color: `omegaDark`\r\n  },\r\n  name: {\r\n    textAlign: [`center`, `left`],\r\n    mt: [3, 0],\r\n    px: 3\r\n  },\r\n  bio: {\r\n    textAlign: [`center`, `left`]\r\n  },\r\n  socialList: {\r\n    a: {\r\n      m: 0\r\n    }\r\n  },\r\n  link: {\r\n    position: `absolute`,\r\n    top: 10,\r\n    right: 10,\r\n    zIndex: 3\r\n  },\r\n  pattern: {\r\n    borderRadius: `lg`\r\n  },\r\n  gradient: {\r\n    size: `full`,\r\n    borderRadius: `lg`,\r\n    position: `absolute`,\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 2,\r\n    background: [\r\n      t =>\r\n        `linear-gradient(0deg, ${t.colors.contentBg} 20%, rgba(255, 255, 255, 0) 80%)`,\r\n      t =>\r\n        `linear-gradient(270deg, ${t.colors.contentBg} 20%, rgba(255, 255, 255, 0) 100%)`\r\n    ]\r\n  }\r\n}\r\n\r\nconst Subheader = ({ children }) => (\r\n  <Heading variant='h4' sx={styles.subheader}>\r\n    {children}\r\n  </Heading>\r\n)\r\n\r\nconst AuthorAvatar = ({ name, thumbnail, slug }) =>\r\n  thumbnail ? (\r\n    <Box>\r\n      <Link as={GLink} to={slug} aria-label={name}>\r\n        <Avatar avatar={thumbnail} alt={name} />\r\n      </Link>\r\n    </Box>\r\n  ) : null\r\n\r\nconst AuthorName = ({ name, slug }) => (\r\n  <Box sx={styles.name}>\r\n    <Heading variant='h3'>\r\n      <Link as={GLink} to={slug}>\r\n        {name}\r\n      </Link>\r\n    </Heading>\r\n  </Box>\r\n)\r\n\r\nconst AuthorBio = ({ title, description }) => (\r\n  <Box sx={styles.bio}>\r\n    <Subheader>{title}</Subheader>\r\n    <Text>{description}</Text>\r\n  </Box>\r\n)\r\n\r\nconst AuthorSkills = ({ skills }) =>\r\n  skills ? (\r\n    <Box sx={styles.innerBox}>\r\n      <Subheader>專長</Subheader>\r\n      {skills.map(skill => (\r\n        <Text key={`skill-${skill}`}>{skill}</Text>\r\n      ))}\r\n    </Box>\r\n  ) : null\r\n\r\nconst AuthorSocialMedia = ({ social }) =>\r\n  social ? (\r\n    <Box sx={styles.innerBox}>\r\n      <Subheader>Social Media</Subheader>\r\n      <Navigation\r\n        variant='vertical'\r\n        items={attachSocialIcons(social)}\r\n        wrapperStyle={styles.socialList}\r\n      />\r\n    </Box>\r\n  ) : null\r\n\r\nconst AuthorExpanded = ({ author, withLink }) => {\r\n  if (!author) return null\r\n\r\n  const { skills, social } = author\r\n\r\n  return (\r\n    <Card variant='paper' sx={styles.card}>\r\n      <Flex sx={styles.wrapper}>\r\n        <Box sx={styles.avatarColumn}>\r\n          <AuthorAvatar {...author} />\r\n        </Box>\r\n        <Box sx={styles.infoColumn}>\r\n          <AuthorName {...author} />\r\n          <Flex sx={styles.wrapper}>\r\n            <Box sx={styles.innerBox}>\r\n              <AuthorBio {...author} />\r\n            </Box>\r\n            {(social || skills) && (\r\n              <Box sx={styles.innerBox}>\r\n                <Flex>\r\n                  <AuthorSkills {...author} />\r\n                  <AuthorSocialMedia {...author} />\r\n                </Flex>\r\n              </Box>\r\n            )}\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n      {withLink && (\r\n        <Badge variant='tag' as={GLink} to={author.slug} sx={styles.link}>\r\n          View Posts\r\n        </Badge>\r\n      )}\r\n      <Box sx={styles.gradient} />\r\n      <MemphisPattern sx={styles.pattern} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AuthorExpanded\r\n","import React from 'react'\r\nimport { Layout, Stack, Main } from '@layout'\r\nimport PageTitle from '@components/PageTitle'\r\nimport Divider from '@components/Divider'\r\nimport Seo from '@widgets/Seo'\r\nimport AuthorExpanded from '@widgets/AuthorExpanded'\r\nimport { useBlogAuthors } from '@helpers-blog'\r\n// Michael Lu, 2024/10/6\r\nimport { graphql } from 'gatsby'\r\n\r\nexport const query = graphql`\r\n  query MobileMenuQuery {\r\n    allArticleCategory(\r\n      filter: { hideCat: { ne: \"true\" } }\r\n      sort: { catOrder: ASC }\r\n    ) {\r\n      nodes {\r\n        catOrder\r\n        hideCat\r\n        name\r\n        slug\r\n      }\r\n    }\r\n    allArticleTag {\r\n      nodes {\r\n        id\r\n        name\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst PageAuthors = props => {\r\n  // console.log('PageAuthors props=', props)\r\n  const catItems = props.data.allArticleCategory.nodes\r\n  const tagItems = props.data.allArticleTag.nodes\r\n  // console.log('PageContact catItems=', catItems, 'tagItems=', tagItems)\r\n  const mobileMenu = []\r\n    .concat(\r\n      catItems && catItems.length > 0\r\n        ? [\r\n            {\r\n              title: '主題',\r\n              items: catItems\r\n            }\r\n          ]\r\n        : []\r\n    )\r\n    .concat(\r\n      tagItems && tagItems.length > 0\r\n        ? [\r\n            {\r\n              title: '標籤',\r\n              items: tagItems\r\n            }\r\n          ]\r\n        : []\r\n    )\r\n  // console.log('PageContact, mobileMenu=', mobileMenu)\r\n  props.pageContext.mobileMenu = mobileMenu\r\n\r\n  const authors = useBlogAuthors()\r\n\r\n  return (\r\n    <Layout {...props}>\r\n      <Seo title='團隊' />\r\n      <Divider />\r\n      <Stack effectProps={{ effect: 'fadeInDown' }}>\r\n        <PageTitle\r\n          header='Team Members'\r\n          subheader='FlexiBlog theme comes with a pre-made contact form component. You can integrate this form with serverless services such as Formspree, Getform, FormKeep and others to receive form submissions via email.'\r\n        />\r\n      </Stack>\r\n      <Stack>\r\n        <Main>\r\n          {authors.map((author, i) => (\r\n            <React.Fragment key={`item-${i}`}>\r\n              <Divider />\r\n              <AuthorExpanded author={author} withLink />\r\n            </React.Fragment>\r\n          ))}\r\n        </Main>\r\n      </Stack>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PageAuthors\r\n"],"names":["r","t","JSON","stringify","n","a","e","length","f","i","push","useBlogCategories","allArticleCategory","useStaticQuery","categoriesQuery","nodes","dedupe","node","slug","useBlogAuthors","allArticleAuthor","authorsQuery","useBlogTags","allArticleTag","tagsQuery","styles","pattern","size","backgroundImage","backgroundSize","position","opacity","top","left","_ref","sx","props","_objectWithoutProperties","_excluded","___EmotionJSX","Box","_extends","_objectSpread","count","fontSize","subheader","fontWeight","color","runninghead","mb","header","running","totalCount","Heading","variant","as","Badge","Text","bs","x","wrapper","zIndex","textAlign","circle","width","height","maxWidth","borderRadius","transform","bg","arc","_ref2","mt","ml","boxShadow","colors","omegaLight","imageWrapper","mx","img","Avatar","_ref3","avatar","withPattern","patternStyles","loading","alt","image","getImageVariant","MemphisPattern","Img","css","defaultProps","card","flexDirection","avatarColumn","flexBasis","infoColumn","innerBox","flexGrow","px","name","bio","socialList","m","link","right","gradient","background","contentBg","Subheader","children","AuthorAvatar","thumbnail","Link","GLink","to","AuthorName","AuthorBio","_ref4","title","description","AuthorSkills","_ref5","skills","map","skill","key","AuthorSocialMedia","_ref6","social","Navigation","items","attachSocialIcons","wrapperStyle","_ref7","author","withLink","Card","Flex","catItems","data","tagItems","mobileMenu","concat","pageContext","authors","Layout","Seo","Divider","Stack","effectProps","effect","PageTitle","Main","React","AuthorExpanded"],"sourceRoot":""}